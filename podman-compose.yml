version: '3.8'

services:
  # Next.js Application
  siteframe-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: siteframe-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      - redis
    networks:
      - siteframe-network
    restart: unless-stopped

  # PostgreSQL Database (已移除 - 使用 Supabase 云端数据库)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: siteframe-postgres
  #   environment:
  #     - POSTGRES_DB=siteframe_dev
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - siteframe-network
  #   restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: siteframe-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - siteframe-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  # postgres_data:  # 已移除 - 使用 Supabase 云端数据库
  #   driver: local
  redis_data:
    driver: local

networks:
  siteframe-network:
    driver: bridge